df <- read.csv("activity.csv")
head(df)
hist(df$steps)
library(tidyverse)
df %>% group_by(data) %>% ggplot(aes(step)) +
geom_histogram()
df %>% group_by(date) %>% ggplot(aes(step)) +
geom_histogram()
df %>% group_by(date) %>% ggplot(aes(x = step)) +
geom_histogram()
df %>% group_by(date) %>% ggplot(aes(steps)) +
geom_histogram()
hist(df$steps)
df %>% ggplot(aes(steps)) +
geom_histogram()
df %>% group_by(date) %>% summarise(across(steps), list(mean, median))
df %>% group_by(date) %>% summarise(across(steps), mean)
df %>% group_by(date) %>% summarise(mean = mean(steps))
df %>% group_by(date) %>% summarise(mean = mean(steps),
median = median(steps))
df %>% summarise(mean = mean(steps),
median = median(steps))
df %>% summarise(mean = mean(steps, na.rm = T),
median = median(steps, na.rm = T))
df %>% group_by(date) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
ggplot(aes(date, mean)) +
geom_line()
df %>% group_by(date) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
ggplot(aes(date, mean)) +
geom_point()
df %>% group_by(date) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
ggplot(aes(date, mean, group = 1)) +
geom_line()
df %>% group_by(date) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
ggplot(aes(date, mean, group = 1)) +
geom_line() +
theme(axis.text.x = element_text(angle = 45))
df %>% group_by(date) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
ggplot(aes(date, mean, group = 1)) +
geom_line() +
theme(axis.text.x = element_text(angle = 45, vjust = 1))
df %>% group_by(date) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
ggplot(aes(date, mean, group = 1)) +
geom_line() +
theme(axis.text.x = element_text(angle = 45, vjust = o.t))
df %>% group_by(date) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
ggplot(aes(date, mean, group = 1)) +
geom_line() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
df %>% group_by(date) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
ggplot(aes(date, mean, group = 1)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
df %>% group_by(interval) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
slice_max()
df %>% group_by(interval) %>% summarise(mean = mean(steps),
median = median(steps))
df %>% group_by(interval) %>% summarise(mean = mean(steps),
median = median(steps)) %>% View()
df %>% group_by(interval) %>% summarise(mean = mean(steps, na.rm = T),
median = median(steps)) %>% View()
df %>% group_by(interval) %>% summarise(mean = mean(steps, na.rm = T),
median = median(steps, na.rm = T)) %>% View()
df %>% group_by(interval) %>%
summarise(mean = mean(steps, na.rm = T)) %>%
slice_max()
df %>% group_by(interval) %>%
summarise(mean = mean(steps, na.rm = T)) %>%
slice_max(mean())
df %>% group_by(interval) %>%
summarise(mean = mean(steps, na.rm = T)) %>%
slice_max(order_by = mean)
df %>% group_by(date) %>% summarise(across(steps, mean))
df %>% fill()
df %>% fill() %>% fill(direction = "up")
df %>% fill() %>% fill(.direction = "up")
df %>% fill(steps)
is.na(df$steps)
df %>% fill() %>% fill(steps, .direction = "up")
df %>% fill(steps) %>% fill(steps, .direction = "up")
df %>% fill(steps) %>% fill(steps, .direction = "up") %>%
group_by(date) %>% ggplot(aes(steps)) +
geom_histogram()
#5. The 5-minute interval that, on average, contains
#the maximum number of steps
df %>% group_by(interval) %>%
summarise(mean = mean(steps, na.rm = T)) %>%
slice_max(order_by = mean)
df%>% distinct(interval)
df %>% filter(interval = 5)
df
df %>% filter(interval == 5)
df %>% filter(interval == 5) %>% ymd(date)
library(tidyverse)
df %>% filter(interval == 5) %>% lubridate::ymd(date)
df %>% filter(interval == 5) %>% lubridate::date(date)
glimpse(df)
df %>% filter(interval == 5) %>% as_date(date)
df %>% filter(interval == 5) %>% lubridate::ymd(date)
library(lubridate)
?ymd
ymd(df$date)
df %>% filter(interval == 5) %>% mutate(date = ymd(date))
df %>% filter(interval == 5) %>% mutate(date = ymd(date)) %>%
mutate(day = day(date))
df %>% filter(interval == 5) %>% mutate(date = ymd(date)) %>%
mutate(day = wday(date))
df %>% filter(interval == 5) %>% mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE))
df %>% mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
ggplot()
df %>% mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE))
df %>% group_by(date) %>% summarise(mean = mean(steps)
%>% mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE))
df %>% group_by(date) %>% summarise(mean = mean(steps)) %>%
mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE))
df %>% mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE))
df %>% mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
ggplot(aes(steps, interval)) +
geom_point()
df %>% mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
ggplot(aes(steps, interval, col = day)) +
geom_point()
df %>% mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
ggplot(aes(steps, interval)) +
geom_point() +
facet_wrap(~day)
df %>% group_by(date) %>% summarise(mean = mean(steps)) %>% mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
ggplot(aes(steps, interval)) +
geom_point() +
facet_wrap(~day)
df %>% group_by(date) %>% summarise(mean = mean(steps)) %>% mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
ggplot(aes(mean, interval)) +
geom_point() +
facet_wrap(~day)
#2. Histogram of the total number of steps taken each day
df %>% group_by(date) %>% ggplot(aes(steps)) +
geom_histogram()
ggsave("q_2.png")
#4. Time series plot of the average number of steps taken
df %>% group_by(date) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
ggplot(aes(date, mean, group = 1)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
ggsave("q_4.png")
df %>% fill(steps) %>% fill(steps, .direction = "up") %>%
group_by(date) %>% ggplot(aes(steps)) +
geom_histogram()
ggsave("q_7.png")
df %>% mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
ggplot(aes(steps, interval)) +
geom_point() +
facet_wrap(~day)
ggsave("q_8.png")
#4. Time series plot of the average number of steps taken
df %>% group_by(date, interval) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
ggplot(aes(date, mean, group = 1)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
#4. Time series plot of the average number of steps taken
df %>% group_by(date, interval) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
ggplot(aes(date, mean)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
#4. Time series plot of the average number of steps taken
df %>% group_by(date, interval) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
ggplot(aes(interval, mean)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
#4. Time series plot of the average number of steps taken
df %>% group_by(date, interval) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
ggplot(aes(interval, mean, group = date)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
#4. Time series plot of the average number of steps taken
df %>% group_by(date, interval) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
ungroup() %>%
ggplot(aes(interval, mean, group = date)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
#4. Time series plot of the average number of steps taken
df %>% group_by(date, interval) %>% summarise(mean = mean(steps),
median = median(steps)) %>%
ungroup() %>% group_vars()
?summarise
#4. Time series plot of the average number of steps taken
df %>% group_by(date, interval) %>% summarise(mean = mean(steps),
median = median(steps), .groups = "drop") %>%
ungroup() %>% group_vars()
#4. Time series plot of the average number of steps taken
df %>% group_by(date, interval) %>% summarise(mean = mean(steps),
median = median(steps), .groups = "drop") %>%
group_vars()
#4. Time series plot of the average number of steps taken
df %>% group_by(date, interval) %>%
summarise(mean = mean(steps),
median = median(steps), .groups = "drop") %>%
ggplot(aes(interval, mean, group = date)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
#4. Time series plot of the average number of steps taken
df %>% group_by(date, interval) %>%
summarise(mean = mean(steps),
median = median(steps), .groups = "drop") %>%
ggplot(aes(interval, mean, col = date)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
#4. Time series plot of the average number of steps taken
df %>% group_by(date, interval) %>%
summarise(mean = mean(steps),
median = median(steps), .groups = "drop") %>%
ggplot(aes(interval, mean, group = date)) +
geom_line()
#6. Code to describe and show a strategy for imputing missing data
df %>% fill(steps, .direction = "up") %>% fill(steps, .direction = "down")
df %>% fill(steps, .direction = "up") %>% fill(steps, .direction = "down") %>%
group_by(date) %>% ggplot(aes(steps)) +
geom_histogram()
df %>% mutate(date = ymd(date)) %>%
mutate(day = weekdays(date)) %>%
ggplot(aes(steps, interval)) +
geom_point() +
facet_wrap(~day)
df %>% mutate(date = ymd(date)) %>%
mutate(day = weekdays(date))
?weekdays
df %>%
mutate(day = weekdays(date))
df %>%
mutate(day = weekdays(as.Date(date)))
df %>%
mutate(day = weekdays(as.Date(date))) %>%
ggplot(aes(steps, interval)) +
geom_point() +
facet_wrap(~day)
weekdays(as.Date(df$date))
df %>% fill(steps, .direction = "up") %>% fill(steps, .direction = "down") %>%
mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
mutate(weekday = ifelse(day == "Sunday" | day == "Saturday", "Weekend", "Weekday"))
df %>% fill(steps, .direction = "up") %>% fill(steps, .direction = "down") %>%
mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
mutate(weekday =
ifelse(day == "Sunday" | day == "Saturday", "Weekend", "Weekday")) %>%
ggplot(aes(steps, interval)) +
geom_point() +
facet_wrap(~weekday)
df %>% fill(steps, .direction = "up") %>% fill(steps, .direction = "down") %>%
mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE))
df %>% fill(steps, .direction = "up") %>% fill(steps, .direction = "down") %>%
mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
mutate(weekday =
ifelse(day == "Sun" | day == "Sat", "Weekend", "Weekday")) %>%
ggplot(aes(steps, interval)) +
geom_point() +
facet_wrap(~weekday)
df %>% fill(steps, .direction = "up") %>% fill(steps, .direction = "down") %>%
mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
mutate(weekday =
ifelse(day == "Sun" | day == "Sat", "Weekend", "Weekday")) %>%
group_by(weekday) %>% summarise(steps = mean(steps)) %>%
ggplot(aes(interval, steps)) +
geom_point() +
facet_wrap(~weekday)
df %>% fill(steps, .direction = "up") %>% fill(steps, .direction = "down") %>%
mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
mutate(weekday =
ifelse(day == "Sun" | day == "Sat", "Weekend", "Weekday"))
df %>% fill(steps, .direction = "up") %>% fill(steps, .direction = "down") %>%
mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
mutate(weekday =
ifelse(day == "Sun" | day == "Sat", "Weekend", "Weekday")) %>%
group_by(weekday, interval) %>% summarise(steps = mean(steps), .groups = "drop") %>%
ggplot(aes(interval, steps)) +
geom_point() +
facet_wrap(~weekday)
df %>% fill(steps, .direction = "up") %>% fill(steps, .direction = "down") %>%
mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
mutate(weekday =
ifelse(day == "Sun" | day == "Sat", "Weekend", "Weekday")) %>%
group_by(weekday, interval) %>% summarise(steps = mean(steps), .groups = "drop") %>%
ggplot(aes(interval, steps)) +
geom_line() +
facet_wrap(~weekday)
#4. Time series plot of the average number of steps taken
df %>% group_by(date, interval) %>%
summarise(mean = mean(steps),
median = median(steps), .groups = "drop") %>%
ggplot(aes(interval, mean, group = date)) +
geom_line()
#4. Time series plot of the average number of steps taken
df %>% group_by(interval) %>%
summarise(mean = mean(steps),
median = median(steps), .groups = "drop") %>%
ggplot(aes(interval, mean)) +
geom_line()
df %>% group_by(interval) %>%
summarise(mean = mean(steps),
median = median(steps), .groups = "drop")
#4. Time series plot of the average number of steps taken
df %>% group_by(interval) %>%
summarise(mean = mean(steps, na.rm = TRUE),
median = median(steps), .groups = "drop") %>%
ggplot(aes(interval, mean)) +
geom_line()
#2. Histogram of the total number of steps taken each day
df %>% group_by(date) %>% ggplot(aes(steps)) +
geom_histogram()
ggsave("q_2.png")
#3. Mean and median number of steps taken each day
df %>% group_by(date) %>% summarise(mean = mean(steps),
median = median(steps))
#4. Time series plot of the average number of steps taken
df %>% group_by(interval) %>%
summarise(mean = mean(steps, na.rm = TRUE),
median = median(steps), .groups = "drop") %>%
ggplot(aes(interval, mean)) +
geom_line()
ggsave("q_4.png")
#5. The 5-minute interval that, on average, contains
#the maximum number of steps
df %>% group_by(interval) %>%
summarise(mean = mean(steps, na.rm = T)) %>%
slice_max(order_by = mean)
#6. Code to describe and show a strategy for imputing missing data
df %>% fill(steps, .direction = "up") %>% fill(steps, .direction = "down")
df %>% fill(steps, .direction = "up") %>% fill(steps, .direction = "down") %>%
group_by(date) %>% ggplot(aes(steps)) +
geom_histogram()
ggsave("q_7.png")
df %>% fill(steps, .direction = "up") %>% fill(steps, .direction = "down") %>%
mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
mutate(weekday =
ifelse(day == "Sun" | day == "Sat", "Weekend", "Weekday")) %>%
group_by(weekday, interval) %>% summarise(steps = mean(steps), .groups = "drop") %>%
ggplot(aes(interval, steps)) +
geom_line() +
facet_wrap(~weekday)
ggsave("q_8.png")
#8. Panel plot comparing the average number of steps taken
#per 5-minute interval across weekdays and weekends
df %>% fill(steps, .direction = "up") %>% fill(steps, .direction = "down") %>%
mutate(date = ymd(date)) %>%
mutate(day = wday(date, label = TRUE)) %>%
mutate(weekday =
ifelse(day == "Sun" | day == "Sat", "Weekend", "Weekday")) %>%
group_by(weekday, interval) %>% summarise(steps = mean(steps), .groups = "drop") %>%
ggplot(aes(interval, steps)) +
geom_line() +
facet_wrap(~weekday)
